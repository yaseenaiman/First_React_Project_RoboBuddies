{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/Cardlist.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","_ref","searchchange","react_default","a","createElement","className","type","placeholder","onChange","Card","id","name","phone","compName","city","alt","src","Cardlist","robots","map","user","components_Card","key","email","company","address","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","React","Component","App","onSearchChange","event","searchfield","target","value","console","log","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","length","ClassName","components_SearchBox","components_Scroll","components_ErrorBoundry","components_Cardlist","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.3fcb08f4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst SearchBox = ({searchchange})=> \r\n{\r\n\r\n    return (\r\n\r\n\r\n    \r\n\r\n<div  className= 'pa2'> <input className ='pa3 ba b--green bg-lightest-blue' type=\"search\" placeholder=\"Search Robots\"\r\n   onChange= {searchchange}  /> </div>\r\n   );\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport 'tachyons';\r\n\r\n\r\nconst Card = ({id, name, phone, compName, city}) =>\r\n{\r\n\r\nreturn (\r\n<div  className ='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n  \r\n  <img alt={\"user_image\"} src={\"https://robohash.org/\"+id+\"?200x200}\" } />\r\n\r\n <p> Name is {name} </p>\r\n <p> Phone is {phone} </p>\r\n <p> Company is {compName} </p>\r\n <p> City is {city} </p>\r\n </div>\r\n\r\n);\r\n}\r\n\r\nexport default Card;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\n\r\n\r\n\r\nconst Cardlist =({robots}) =>\r\n\r\n{\r\n\r\nreturn (\r\n    <div>\r\n\r\n\r\n    {robots.map((user) => {\r\n        return( \r\n      <Card key={user.id}\r\n      id={user.id}\r\n      name={user.name}\r\n      email={user.email}\r\n      compName={user.company.name}\r\n      city={user.address.city}\r\n      phone ={user.phone}\r\n\r\n     />\r\n        );\r\n        })\r\n}\r\n    \r\n</div>\r\n);\r\n\r\n\r\n\r\n}\r\n\r\nexport default Cardlist;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n   \r\nreturn  (\r\n    <div   style={{overflowY: 'scroll', border: '1px solid black', height:'500px'}}>\r\n    {props.children}\r\n\r\n</div>\r\n\r\n);\r\n};\r\nexport default Scroll;\r\n\r\n","import React from 'react';\r\n\r\n\r\nclass ErrorBoundry extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            hasError: false\r\n        }\r\n\r\n    }\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.hasError) {\r\n\r\n            return <h1>We are maintaining the platform, try again later</h1>\r\n        }\r\n\r\n        return this.props.children\r\n\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\nimport './App.css';\nimport 'tachyons';\nimport SearchBox from '../components/SearchBox';\nimport Cardlist from '../components/Cardlist';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n    console.log('constructor');\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users })\n      )\n\n    console.log('Did Mount');\n\n\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n\n    console.log(event.target.value);\n  }\n\n  render() {\n    console.log('Render');\n\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n    })\n    if (this.state.robots.length === 0) {\n      return <div ClassName='tc'><h1 >Loading</h1></div>\n    }\n    else {\n      return (\n        <div className='tc'>\n          <p><h1>RoboBuddieS</h1></p>\n\n          <SearchBox searchchange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundry>\n            <Cardlist robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n\n      );\n\n    }\n  }\n\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}